name: Continuous Integration release workflow

on: 
  # push:
  #  branches: 
  #    - main
  workflow_dispatch:

jobs:
  UnitaryAndIntegrationTesting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Unitary & Integration tests
        working-directory: ./backend/parent-project
        run: mvn clean install -P IT
      
  BuildAndDockerize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Build project & docker image
        working-directory: ./backend/parent-project
        run: mvn package

  ReleaseAndUpgradeProjectVersion:
    runs-on: ubuntu-latest
    needs: [UnitaryAndIntegrationTesting, BuildAndDockerize]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      
      - name: Read old pom version
        working-directory: ./backend/parent-project
        run: echo ::set-output name=pom-version::$(echo $(mvn -q help:evaluate -Dexpression=project.version -DforceStdout) | sed 's/-SNAPSHOT*//' )
        id: old-version-number
      - name: Generate new pom version ouput
        working-directory: ./backend/parent-project
        run: echo ::set-output name=pom-version::$(echo ${{ steps.old-version-number.outputs.pom-version }} | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)
        id: new-version-number

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.old-version-number.outputs.pom-version }}
          prerelease: true
          files: |
            backend/parent-project/startup/target/startup.jar
        
      - name: Updating parent version
        working-directory: ./backend/parent-project
        run: mvn versions:set -DnewVersion=${{ steps.new-version-number.outputs.pom-version }}
      - name: Clean pom backups
        working-directory: ./backend/parent-project
        run: mvn versions:commit
      
      - name: Commit new pom versions
        uses: EndBug/add-and-commit@v9.1.0
        with:
          message: 'Auto CI: advancing pom versions'
